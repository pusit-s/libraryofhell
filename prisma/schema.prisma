// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
model Member {
  id                 Int                @id @default(autoincrement())
  name               String
  surname            String
  telephone          String
  borrowTransactions BorrowTransaction[]
}

model BorrowTransaction {
  id                 Int                @id @default(autoincrement())
  memberId           Int
  member             Member             @relation(fields: [memberId], references: [id])
  borrowDate         DateTime
  borrowRecords      BorrowRecord[]
}

model BorrowRecord {
  id                 Int                @id @default(autoincrement())
  transactionId      Int
  transaction        BorrowTransaction  @relation(fields: [transactionId], references: [id])
  bookId             Int
  book               Book               @relation(fields: [bookId], references: [id])
  scheduledReturnDate DateTime
  actualReturnDate   DateTime?
  isReturned         Boolean
}

model Book {
  id                 Int                @id @default(autoincrement())
  title              String
  isbn               String
  category           String
  authorId           Int?
  author             Author?            @relation(fields: [authorId], references: [id])
  borrowRecords      BorrowRecord[]
}

model Author {
  id                 Int                @id @default(autoincrement())
  name               String
  surname            String
  affiliation        String
  books              Book[]
}